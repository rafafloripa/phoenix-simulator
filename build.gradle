apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'pmd'

targetCompatibility = 1.7
sourceCompatibility = 1.7

version = '1.0-SNAPSHOT'

jar {
    manifest {
        attributes 'Implementation-Title': 'MockupSimulator', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'info.cukes:cucumber-java:1.1.6'
    testCompile 'info.cukes:cucumber-junit:1.1.6'
    testCompile 'info.cukes:cucumber-core:1.1.6'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.6'
}

task downloadSDP(type: MyDownload) {
    sourceUrl = 'http://developer.lindholmen.se/repo/SDP-1.0-SNAPSHOT.jar'
    target = file('libs/SDP-1.0-SNAPSHOT.jar')
}

task downloadVilConfig(type: MyDownload) {
    sourceUrl = 'http://developer.lindholmen.se/repo/VIL-1.0-SNAPSHOT.jar'
    target = file('libs/VIL-1.0-SNAPSHOT.jar')
}

class MyDownload extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}

compileJava.dependsOn downloadSDP
compileJava.dependsOn downloadVilConfig
task libsClean(type: Delete) {
    delete 'libs'
}

clean.dependsOn libsClean

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task acceptanceTest() {
	
    dependsOn assemble, compileTestJava 
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['-f', 'pretty', '--monochrome', '--glue', 'acceptancetest', 'src/test/java/acceptancetest']
        }
    }
}

pmd {
    ignoreFailures = true
    ruleSetFiles = files("config/pmd/sdp.xml")
}
